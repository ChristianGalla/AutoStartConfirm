# This is a basic workflow to help you get started with Actions

name: Build & Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths:
      - 'AutoStartConfirm/**'
      - 'AutoStartConfirmSetup/**'
      - 'AutoStartConfirmTests/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'AutoStartConfirm/**'
      - 'AutoStartConfirmSetup/**'
      - 'AutoStartConfirmTests/**'
      - '.github/workflows/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      
    - uses: actions/cache@v2
      name: Restore NuGet cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
 
    - name: Restore NuGet packages
      run: nuget restore AutoStartConfirm.sln
    
    - name: Build solution
      run: msbuild AutoStartConfirm.sln -property:Configuration=Release
      
    - name: Test solution
      working-directory: .\AutoStartConfirmTests\bin\x64\Release
      run: vstest.console.exe /Platform:x64 AutoStartConfirmTests.dll
    
    - uses: actions/upload-artifact@v2
      name: Upload artifacts
      with:
        name: AutoStartConfirmSetup
        path: |
          AutoStartConfirmSetup\bin\x64\Release
          !**\*.wixpdb
